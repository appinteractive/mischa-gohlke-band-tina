//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  id: Scalars['ID'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  page: Page;
  pageConnection: PageConnection;
  navigation: Navigation;
  navigationConnection: NavigationConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPageArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PageFilter>;
};


export type QueryNavigationArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryNavigationConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<NavigationFilter>;
};

export type DocumentFilter = {
  page?: InputMaybe<PageFilter>;
  navigation?: InputMaybe<NavigationFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocumentFilter>;
};

export type DocumentNode = PageSimple | PageBlocks | NavigationFooter | NavigationMainNav;

export type PageSimple = Node & Document & {
  __typename?: 'PageSimple';
  title: Scalars['String'];
  description?: Maybe<Scalars['String']>;
  teaser?: Maybe<Scalars['String']>;
  alias?: Maybe<Scalars['String']>;
  accessible?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type PageBlocksBlocksHero = {
  __typename?: 'PageBlocksBlocksHero';
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['JSON']>;
};

export type PageBlocksBlocksFeaturesItems = {
  __typename?: 'PageBlocksBlocksFeaturesItems';
  title?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
};

export type PageBlocksBlocksFeatures = {
  __typename?: 'PageBlocksBlocksFeatures';
  items?: Maybe<Array<Maybe<PageBlocksBlocksFeaturesItems>>>;
};

export type PageBlocksBlocksContent = {
  __typename?: 'PageBlocksBlocksContent';
  body?: Maybe<Scalars['JSON']>;
};

export type PageBlocksBlocks = PageBlocksBlocksHero | PageBlocksBlocksFeatures | PageBlocksBlocksContent;

export type PageBlocks = Node & Document & {
  __typename?: 'PageBlocks';
  title: Scalars['String'];
  description?: Maybe<Scalars['String']>;
  teaser?: Maybe<Scalars['String']>;
  alias?: Maybe<Scalars['String']>;
  accessible?: Maybe<Scalars['String']>;
  blocks?: Maybe<Array<Maybe<PageBlocksBlocks>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type Page = PageSimple | PageBlocks;

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type RichTextFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type PageSimpleFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  teaser?: InputMaybe<ImageFilter>;
  alias?: InputMaybe<StringFilter>;
  accessible?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
};

export type PageBlocksBlocksHeroFilter = {
  headline?: InputMaybe<StringFilter>;
  text?: InputMaybe<RichTextFilter>;
};

export type PageBlocksBlocksFeaturesItemsFilter = {
  title?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
};

export type PageBlocksBlocksFeaturesFilter = {
  items?: InputMaybe<PageBlocksBlocksFeaturesItemsFilter>;
};

export type PageBlocksBlocksContentFilter = {
  body?: InputMaybe<RichTextFilter>;
};

export type PageBlocksBlocksFilter = {
  hero?: InputMaybe<PageBlocksBlocksHeroFilter>;
  features?: InputMaybe<PageBlocksBlocksFeaturesFilter>;
  content?: InputMaybe<PageBlocksBlocksContentFilter>;
};

export type PageBlocksFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  teaser?: InputMaybe<ImageFilter>;
  alias?: InputMaybe<StringFilter>;
  accessible?: InputMaybe<StringFilter>;
  blocks?: InputMaybe<PageBlocksBlocksFilter>;
};

export type PageFilter = {
  simple?: InputMaybe<PageSimpleFilter>;
  blocks?: InputMaybe<PageBlocksFilter>;
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Page>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type NavigationFooterFooterMenuChildrenPage = PageSimple | PageBlocks;

export type NavigationFooterFooterMenuChildren = {
  __typename?: 'NavigationFooterFooterMenuChildren';
  title: Scalars['String'];
  page: NavigationFooterFooterMenuChildrenPage;
};

export type NavigationFooterFooterMenu = {
  __typename?: 'NavigationFooterFooterMenu';
  title: Scalars['String'];
  children?: Maybe<Array<Maybe<NavigationFooterFooterMenuChildren>>>;
};

export type NavigationFooter = Node & Document & {
  __typename?: 'NavigationFooter';
  footerMenu?: Maybe<Array<Maybe<NavigationFooterFooterMenu>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type NavigationMainNavMenuPage = PageSimple | PageBlocks;

export type NavigationMainNavMenuChildrenPage = PageSimple | PageBlocks;

export type NavigationMainNavMenuChildrenChildrenPage = PageSimple | PageBlocks;

export type NavigationMainNavMenuChildrenChildrenChildrenPage = PageSimple | PageBlocks;

export type NavigationMainNavMenuChildrenChildrenChildrenChildrenPage = PageSimple | PageBlocks;

export type NavigationMainNavMenuChildrenChildrenChildrenChildren = {
  __typename?: 'NavigationMainNavMenuChildrenChildrenChildrenChildren';
  title: Scalars['String'];
  page?: Maybe<NavigationMainNavMenuChildrenChildrenChildrenChildrenPage>;
};

export type NavigationMainNavMenuChildrenChildrenChildren = {
  __typename?: 'NavigationMainNavMenuChildrenChildrenChildren';
  title: Scalars['String'];
  page?: Maybe<NavigationMainNavMenuChildrenChildrenChildrenPage>;
  children?: Maybe<Array<Maybe<NavigationMainNavMenuChildrenChildrenChildrenChildren>>>;
};

export type NavigationMainNavMenuChildrenChildren = {
  __typename?: 'NavigationMainNavMenuChildrenChildren';
  title: Scalars['String'];
  page?: Maybe<NavigationMainNavMenuChildrenChildrenPage>;
  children?: Maybe<Array<Maybe<NavigationMainNavMenuChildrenChildrenChildren>>>;
};

export type NavigationMainNavMenuChildren = {
  __typename?: 'NavigationMainNavMenuChildren';
  title: Scalars['String'];
  page?: Maybe<NavigationMainNavMenuChildrenPage>;
  disabled?: Maybe<Scalars['Boolean']>;
  children?: Maybe<Array<Maybe<NavigationMainNavMenuChildrenChildren>>>;
};

export type NavigationMainNavMenu = {
  __typename?: 'NavigationMainNavMenu';
  title: Scalars['String'];
  page?: Maybe<NavigationMainNavMenuPage>;
  children?: Maybe<Array<Maybe<NavigationMainNavMenuChildren>>>;
};

export type NavigationMainNav = Node & Document & {
  __typename?: 'NavigationMainNav';
  menu?: Maybe<Array<Maybe<NavigationMainNavMenu>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type Navigation = NavigationFooter | NavigationMainNav;

export type NavigationFooterFooterMenuChildrenPageFilter = {
  page?: InputMaybe<PageFilter>;
};

export type NavigationFooterFooterMenuChildrenFilter = {
  title?: InputMaybe<StringFilter>;
  page?: InputMaybe<NavigationFooterFooterMenuChildrenPageFilter>;
};

export type NavigationFooterFooterMenuFilter = {
  title?: InputMaybe<StringFilter>;
  children?: InputMaybe<NavigationFooterFooterMenuChildrenFilter>;
};

export type NavigationFooterFilter = {
  footerMenu?: InputMaybe<NavigationFooterFooterMenuFilter>;
};

export type NavigationMainNavMenuPageFilter = {
  page?: InputMaybe<PageFilter>;
};

export type NavigationMainNavMenuChildrenPageFilter = {
  page?: InputMaybe<PageFilter>;
};

export type BooleanFilter = {
  eq?: InputMaybe<Scalars['Boolean']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type NavigationMainNavMenuChildrenChildrenPageFilter = {
  page?: InputMaybe<PageFilter>;
};

export type NavigationMainNavMenuChildrenChildrenChildrenPageFilter = {
  page?: InputMaybe<PageFilter>;
};

export type NavigationMainNavMenuChildrenChildrenChildrenChildrenPageFilter = {
  page?: InputMaybe<PageFilter>;
};

export type NavigationMainNavMenuChildrenChildrenChildrenChildrenFilter = {
  title?: InputMaybe<StringFilter>;
  page?: InputMaybe<NavigationMainNavMenuChildrenChildrenChildrenChildrenPageFilter>;
};

export type NavigationMainNavMenuChildrenChildrenChildrenFilter = {
  title?: InputMaybe<StringFilter>;
  page?: InputMaybe<NavigationMainNavMenuChildrenChildrenChildrenPageFilter>;
  children?: InputMaybe<NavigationMainNavMenuChildrenChildrenChildrenChildrenFilter>;
};

export type NavigationMainNavMenuChildrenChildrenFilter = {
  title?: InputMaybe<StringFilter>;
  page?: InputMaybe<NavigationMainNavMenuChildrenChildrenPageFilter>;
  children?: InputMaybe<NavigationMainNavMenuChildrenChildrenChildrenFilter>;
};

export type NavigationMainNavMenuChildrenFilter = {
  title?: InputMaybe<StringFilter>;
  page?: InputMaybe<NavigationMainNavMenuChildrenPageFilter>;
  disabled?: InputMaybe<BooleanFilter>;
  children?: InputMaybe<NavigationMainNavMenuChildrenChildrenFilter>;
};

export type NavigationMainNavMenuFilter = {
  title?: InputMaybe<StringFilter>;
  page?: InputMaybe<NavigationMainNavMenuPageFilter>;
  children?: InputMaybe<NavigationMainNavMenuChildrenFilter>;
};

export type NavigationMainNavFilter = {
  menu?: InputMaybe<NavigationMainNavMenuFilter>;
};

export type NavigationFilter = {
  footer?: InputMaybe<NavigationFooterFilter>;
  mainNav?: InputMaybe<NavigationMainNavFilter>;
};

export type NavigationConnectionEdges = {
  __typename?: 'NavigationConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Navigation>;
};

export type NavigationConnection = Connection & {
  __typename?: 'NavigationConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<NavigationConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updatePage: Page;
  createPage: Page;
  updateNavigation: Navigation;
  createNavigation: Navigation;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationCreatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationUpdateNavigationArgs = {
  relativePath: Scalars['String'];
  params: NavigationMutation;
};


export type MutationCreateNavigationArgs = {
  relativePath: Scalars['String'];
  params: NavigationMutation;
};

export type DocumentUpdateMutation = {
  page?: InputMaybe<PageMutation>;
  navigation?: InputMaybe<NavigationMutation>;
  relativePath?: InputMaybe<Scalars['String']>;
};

export type DocumentMutation = {
  page?: InputMaybe<PageMutation>;
  navigation?: InputMaybe<NavigationMutation>;
};

export type PageSimpleMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  teaser?: InputMaybe<Scalars['String']>;
  alias?: InputMaybe<Scalars['String']>;
  accessible?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksBlocksHeroMutation = {
  headline?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksBlocksFeaturesItemsMutation = {
  title?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksBlocksFeaturesMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksBlocksFeaturesItemsMutation>>>;
};

export type PageBlocksBlocksContentMutation = {
  body?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksBlocksMutation = {
  hero?: InputMaybe<PageBlocksBlocksHeroMutation>;
  features?: InputMaybe<PageBlocksBlocksFeaturesMutation>;
  content?: InputMaybe<PageBlocksBlocksContentMutation>;
};

export type PageBlocksMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  teaser?: InputMaybe<Scalars['String']>;
  alias?: InputMaybe<Scalars['String']>;
  accessible?: InputMaybe<Scalars['String']>;
  blocks?: InputMaybe<Array<InputMaybe<PageBlocksBlocksMutation>>>;
};

export type PageMutation = {
  simple?: InputMaybe<PageSimpleMutation>;
  blocks?: InputMaybe<PageBlocksMutation>;
};

export type NavigationFooterFooterMenuChildrenMutation = {
  title?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['String']>;
};

export type NavigationFooterFooterMenuMutation = {
  title?: InputMaybe<Scalars['String']>;
  children?: InputMaybe<Array<InputMaybe<NavigationFooterFooterMenuChildrenMutation>>>;
};

export type NavigationFooterMutation = {
  footerMenu?: InputMaybe<Array<InputMaybe<NavigationFooterFooterMenuMutation>>>;
};

export type NavigationMainNavMenuChildrenChildrenChildrenChildrenMutation = {
  title?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['String']>;
};

export type NavigationMainNavMenuChildrenChildrenChildrenMutation = {
  title?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['String']>;
  children?: InputMaybe<Array<InputMaybe<NavigationMainNavMenuChildrenChildrenChildrenChildrenMutation>>>;
};

export type NavigationMainNavMenuChildrenChildrenMutation = {
  title?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['String']>;
  children?: InputMaybe<Array<InputMaybe<NavigationMainNavMenuChildrenChildrenChildrenMutation>>>;
};

export type NavigationMainNavMenuChildrenMutation = {
  title?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['String']>;
  disabled?: InputMaybe<Scalars['Boolean']>;
  children?: InputMaybe<Array<InputMaybe<NavigationMainNavMenuChildrenChildrenMutation>>>;
};

export type NavigationMainNavMenuMutation = {
  title?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['String']>;
  children?: InputMaybe<Array<InputMaybe<NavigationMainNavMenuChildrenMutation>>>;
};

export type NavigationMainNavMutation = {
  menu?: InputMaybe<Array<InputMaybe<NavigationMainNavMenuMutation>>>;
};

export type NavigationMutation = {
  footer?: InputMaybe<NavigationFooterMutation>;
  mainNav?: InputMaybe<NavigationMainNavMutation>;
};

export type NavQueryVariables = Exact<{ [key: string]: never; }>;


export type NavQuery = { __typename?: 'Query', navigationConnection: { __typename?: 'NavigationConnection', edges?: Array<{ __typename?: 'NavigationConnectionEdges', node?: { __typename?: 'NavigationFooter', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, footer?: Array<{ __typename?: 'NavigationFooterFooterMenu', title: string, children?: Array<{ __typename?: 'NavigationFooterFooterMenuChildren', title: string, page: { __typename?: 'PageSimple', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | { __typename?: 'PageBlocks', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } } | null> | null } | null> | null } | { __typename?: 'NavigationMainNav', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, main?: Array<{ __typename?: 'NavigationMainNavMenu', title: string, page?: { __typename?: 'PageSimple', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | { __typename?: 'PageBlocks', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | null, children?: Array<{ __typename?: 'NavigationMainNavMenuChildren', title: string, page?: { __typename?: 'PageSimple', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | { __typename?: 'PageBlocks', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | null, children?: Array<{ __typename?: 'NavigationMainNavMenuChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | { __typename?: 'PageBlocks', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | null, children?: Array<{ __typename?: 'NavigationMainNavMenuChildrenChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | { __typename?: 'PageBlocks', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | null, children?: Array<{ __typename?: 'NavigationMainNavMenuChildrenChildrenChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | { __typename?: 'PageBlocks', id: string, _sys: { __typename?: 'SystemInfo', breadcrumbs: Array<string> } } | null } | null> | null } | null> | null } | null> | null } | null> | null } | null> | null } | null } | null> | null } };

type PageParts_PageSimple_Fragment = { __typename?: 'PageSimple', title: string, description?: string | null, teaser?: string | null, alias?: string | null, accessible?: string | null, body?: any | null };

type PageParts_PageBlocks_Fragment = { __typename?: 'PageBlocks', title: string, description?: string | null, teaser?: string | null, alias?: string | null, accessible?: string | null, blocks?: Array<{ __typename: 'PageBlocksBlocksHero', headline?: string | null, text?: any | null } | { __typename: 'PageBlocksBlocksFeatures', items?: Array<{ __typename: 'PageBlocksBlocksFeaturesItems', title?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksBlocksContent', body?: any | null } | null> | null };

export type PagePartsFragment = PageParts_PageSimple_Fragment | PageParts_PageBlocks_Fragment;

type NavigationParts_NavigationFooter_Fragment = { __typename?: 'NavigationFooter', footerMenu?: Array<{ __typename: 'NavigationFooterFooterMenu', title: string, children?: Array<{ __typename: 'NavigationFooterFooterMenuChildren', title: string, page: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } } | null> | null } | null> | null };

type NavigationParts_NavigationMainNav_Fragment = { __typename?: 'NavigationMainNav', menu?: Array<{ __typename: 'NavigationMainNavMenu', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildren', title: string, disabled?: boolean | null, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildrenChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildrenChildrenChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null } | null> | null } | null> | null } | null> | null } | null> | null } | null> | null };

export type NavigationPartsFragment = NavigationParts_NavigationFooter_Fragment | NavigationParts_NavigationMainNav_Fragment;

export type PageQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PageQuery = { __typename?: 'Query', page: { __typename?: 'PageSimple', id: string, title: string, description?: string | null, teaser?: string | null, alias?: string | null, accessible?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | { __typename?: 'PageBlocks', id: string, title: string, description?: string | null, teaser?: string | null, alias?: string | null, accessible?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksBlocksHero', headline?: string | null, text?: any | null } | { __typename: 'PageBlocksBlocksFeatures', items?: Array<{ __typename: 'PageBlocksBlocksFeaturesItems', title?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksBlocksContent', body?: any | null } | null> | null } };

export type PageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PageFilter>;
}>;


export type PageConnectionQuery = { __typename?: 'Query', pageConnection: { __typename?: 'PageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PageConnectionEdges', cursor: string, node?: { __typename?: 'PageSimple', id: string, title: string, description?: string | null, teaser?: string | null, alias?: string | null, accessible?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | { __typename?: 'PageBlocks', id: string, title: string, description?: string | null, teaser?: string | null, alias?: string | null, accessible?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksBlocksHero', headline?: string | null, text?: any | null } | { __typename: 'PageBlocksBlocksFeatures', items?: Array<{ __typename: 'PageBlocksBlocksFeaturesItems', title?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksBlocksContent', body?: any | null } | null> | null } | null } | null> | null } };

export type NavigationQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type NavigationQuery = { __typename?: 'Query', navigation: { __typename?: 'NavigationFooter', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, footerMenu?: Array<{ __typename: 'NavigationFooterFooterMenu', title: string, children?: Array<{ __typename: 'NavigationFooterFooterMenuChildren', title: string, page: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } } | null> | null } | null> | null } | { __typename?: 'NavigationMainNav', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, menu?: Array<{ __typename: 'NavigationMainNavMenu', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildren', title: string, disabled?: boolean | null, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildrenChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildrenChildrenChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null } | null> | null } | null> | null } | null> | null } | null> | null } | null> | null } };

export type NavigationConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<NavigationFilter>;
}>;


export type NavigationConnectionQuery = { __typename?: 'Query', navigationConnection: { __typename?: 'NavigationConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'NavigationConnectionEdges', cursor: string, node?: { __typename?: 'NavigationFooter', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, footerMenu?: Array<{ __typename: 'NavigationFooterFooterMenu', title: string, children?: Array<{ __typename: 'NavigationFooterFooterMenuChildren', title: string, page: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } } | null> | null } | null> | null } | { __typename?: 'NavigationMainNav', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, menu?: Array<{ __typename: 'NavigationMainNavMenu', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildren', title: string, disabled?: boolean | null, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildrenChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null, children?: Array<{ __typename: 'NavigationMainNavMenuChildrenChildrenChildrenChildren', title: string, page?: { __typename?: 'PageSimple', id: string } | { __typename?: 'PageBlocks', id: string } | null } | null> | null } | null> | null } | null> | null } | null> | null } | null> | null } | null } | null> | null } };

export const PagePartsFragmentDoc = gql`
    fragment PageParts on Page {
  ... on PageSimple {
    title
    description
    teaser
    alias
    accessible
    body
  }
  ... on PageBlocks {
    title
    description
    teaser
    alias
    accessible
    blocks {
      __typename
      ... on PageBlocksBlocksHero {
        headline
        text
      }
      ... on PageBlocksBlocksFeatures {
        items {
          __typename
          title
          text
        }
      }
      ... on PageBlocksBlocksContent {
        body
      }
    }
  }
}
    `;
export const NavigationPartsFragmentDoc = gql`
    fragment NavigationParts on Navigation {
  ... on NavigationFooter {
    footerMenu {
      __typename
      title
      children {
        __typename
        title
        page {
          ... on Page {
            ... on PageSimple {
              title
              description
              teaser
              alias
              accessible
              body
            }
            ... on PageBlocks {
              title
              description
              teaser
              alias
              accessible
              blocks {
                __typename
                ... on PageBlocksBlocksHero {
                  headline
                  text
                }
                ... on PageBlocksBlocksFeatures {
                  items {
                    __typename
                    title
                    text
                  }
                }
                ... on PageBlocksBlocksContent {
                  body
                }
              }
            }
          }
          ... on Document {
            id
          }
        }
      }
    }
  }
  ... on NavigationMainNav {
    menu {
      __typename
      title
      page {
        ... on Page {
          ... on PageSimple {
            title
            description
            teaser
            alias
            accessible
            body
          }
          ... on PageBlocks {
            title
            description
            teaser
            alias
            accessible
            blocks {
              __typename
              ... on PageBlocksBlocksHero {
                headline
                text
              }
              ... on PageBlocksBlocksFeatures {
                items {
                  __typename
                  title
                  text
                }
              }
              ... on PageBlocksBlocksContent {
                body
              }
            }
          }
        }
        ... on Document {
          id
        }
      }
      children {
        __typename
        title
        page {
          ... on Page {
            ... on PageSimple {
              title
              description
              teaser
              alias
              accessible
              body
            }
            ... on PageBlocks {
              title
              description
              teaser
              alias
              accessible
              blocks {
                __typename
                ... on PageBlocksBlocksHero {
                  headline
                  text
                }
                ... on PageBlocksBlocksFeatures {
                  items {
                    __typename
                    title
                    text
                  }
                }
                ... on PageBlocksBlocksContent {
                  body
                }
              }
            }
          }
          ... on Document {
            id
          }
        }
        disabled
        children {
          __typename
          title
          page {
            ... on Page {
              ... on PageSimple {
                title
                description
                teaser
                alias
                accessible
                body
              }
              ... on PageBlocks {
                title
                description
                teaser
                alias
                accessible
                blocks {
                  __typename
                  ... on PageBlocksBlocksHero {
                    headline
                    text
                  }
                  ... on PageBlocksBlocksFeatures {
                    items {
                      __typename
                      title
                      text
                    }
                  }
                  ... on PageBlocksBlocksContent {
                    body
                  }
                }
              }
            }
            ... on Document {
              id
            }
          }
          children {
            __typename
            title
            page {
              ... on Page {
                ... on PageSimple {
                  title
                  description
                  teaser
                  alias
                  accessible
                  body
                }
                ... on PageBlocks {
                  title
                  description
                  teaser
                  alias
                  accessible
                  blocks {
                    __typename
                    ... on PageBlocksBlocksHero {
                      headline
                      text
                    }
                    ... on PageBlocksBlocksFeatures {
                      items {
                        __typename
                        title
                        text
                      }
                    }
                    ... on PageBlocksBlocksContent {
                      body
                    }
                  }
                }
              }
              ... on Document {
                id
              }
            }
            children {
              __typename
              title
              page {
                ... on Page {
                  ... on PageSimple {
                    title
                    description
                    teaser
                    alias
                    accessible
                    body
                  }
                  ... on PageBlocks {
                    title
                    description
                    teaser
                    alias
                    accessible
                    blocks {
                      __typename
                      ... on PageBlocksBlocksHero {
                        headline
                        text
                      }
                      ... on PageBlocksBlocksFeatures {
                        items {
                          __typename
                          title
                          text
                        }
                      }
                      ... on PageBlocksBlocksContent {
                        body
                      }
                    }
                  }
                }
                ... on Document {
                  id
                }
              }
            }
          }
        }
      }
    }
  }
}
    `;
export const NavDocument = gql`
    query nav {
  navigationConnection {
    edges {
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ... on NavigationFooter {
          footer: footerMenu {
            title
            children {
              title
              page {
                ... on Page {
                  ... on PageSimple {
                    title
                  }
                  ... on PageBlocks {
                    title
                  }
                }
                ... on Document {
                  id
                  _sys {
                    breadcrumbs
                  }
                }
              }
            }
          }
        }
        ... on NavigationMainNav {
          main: menu {
            title
            page {
              ... on Document {
                id
                _sys {
                  breadcrumbs
                }
              }
            }
            children {
              title
              page {
                ... on Document {
                  id
                  _sys {
                    breadcrumbs
                  }
                }
              }
              children {
                title
                page {
                  ... on Document {
                    id
                    _sys {
                      breadcrumbs
                    }
                  }
                }
                children {
                  title
                  page {
                    ... on Document {
                      id
                      _sys {
                        breadcrumbs
                      }
                    }
                  }
                  children {
                    title
                    page {
                      ... on Document {
                        id
                        _sys {
                          breadcrumbs
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
    `;
export const PageDocument = gql`
    query page($relativePath: String!) {
  page(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PageParts
  }
}
    ${PagePartsFragmentDoc}`;
export const PageConnectionDocument = gql`
    query pageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PageFilter) {
  pageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PageParts
      }
    }
  }
}
    ${PagePartsFragmentDoc}`;
export const NavigationDocument = gql`
    query navigation($relativePath: String!) {
  navigation(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...NavigationParts
  }
}
    ${NavigationPartsFragmentDoc}`;
export const NavigationConnectionDocument = gql`
    query navigationConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: NavigationFilter) {
  navigationConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...NavigationParts
      }
    }
  }
}
    ${NavigationPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      nav(variables?: NavQueryVariables, options?: C): Promise<{data: NavQuery, variables: NavQueryVariables, query: string}> {
        return requester<{data: NavQuery, variables: NavQueryVariables, query: string}, NavQueryVariables>(NavDocument, variables, options);
      },
    page(variables: PageQueryVariables, options?: C): Promise<{data: PageQuery, variables: PageQueryVariables, query: string}> {
        return requester<{data: PageQuery, variables: PageQueryVariables, query: string}, PageQueryVariables>(PageDocument, variables, options);
      },
    pageConnection(variables?: PageConnectionQueryVariables, options?: C): Promise<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}> {
        return requester<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}, PageConnectionQueryVariables>(PageConnectionDocument, variables, options);
      },
    navigation(variables: NavigationQueryVariables, options?: C): Promise<{data: NavigationQuery, variables: NavigationQueryVariables, query: string}> {
        return requester<{data: NavigationQuery, variables: NavigationQueryVariables, query: string}, NavigationQueryVariables>(NavigationDocument, variables, options);
      },
    navigationConnection(variables?: NavigationConnectionQueryVariables, options?: C): Promise<{data: NavigationConnectionQuery, variables: NavigationConnectionQueryVariables, query: string}> {
        return requester<{data: NavigationConnectionQuery, variables: NavigationConnectionQueryVariables, query: string}, NavigationConnectionQueryVariables>(NavigationConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (client: TinaClient) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: any,
    client
  ) => Promise<any> = async (doc, vars, _options) => {
    const data = await client.request({
      query: doc,
      variables: vars,
    });

    return { data: data?.data, query: doc, variables: vars || {} };
  };

  return requester;
};

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(createClient({ url: "http://localhost:4001/graphql", queries }))
  );

export const queries = (client: TinaClient) => {
  const requester = generateRequester(client);
  return getSdk(requester);
};

  